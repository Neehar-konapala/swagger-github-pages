openapi: 3.0.3
info:
  title: HachiAI APIs
  version: 1.0.0
  description: >
    API endpoints for document classification and LLM-based document question answering.
    All endpoints require an API key via the X-API-KEY header for authentication.
servers:
  - url: https://api.hachiai.com
    description: Production server
tags:
  - name: Document Classification
    description: Classify and analyze document page ranges
  - name: LLM QnA
    description: Conversational QnA via large language models
  - name: Extraction
    description: Extract structured data from documents

paths:
  /v1/classify:
    post:
      tags:
        - Document Classification
      summary: Analyze and Classify Invoice Pages
      description: >
        Uploads one invoice document (JPEG, JPG, PNG, or PDF). Uses Azure Custom Classifier to predict invoice page ranges.
      operationId: classify_invoice
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_azure_invoices_api_v1_classify_post'
      responses:
        '200':
          description: Classification result
          content:
            application/json:
              schema: {}
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - ApiKeyAuth: []

  /v1/trace_id/{trace_id}:
    get:
      tags:
        - Document Classification
      summary: Check Status by Trace ID
      description: >
        Retrieve processing status and details for a specific task using its unique trace ID.
      operationId: get_trace_status
      parameters:
        - name: trace_id
          in: path
          required: true
          description: The unique trace ID to query status
          schema:
            type: string
      responses:
        '200':
          description: Status response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - ApiKeyAuth: []

  /v1/llm/qna/conversations/async:
    post:
      tags:
        - LLM QnA
      summary: LLM QnA Playground (Async)
      description: >
        Perform asynchronous QnA with a large language model (LLM) over file documents.
      operationId: llm_qna_conversations_async
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_llm_conversation_with_celery_v1_llm_qna_conversations_async_post'
      responses:
        '200':
          description: QnA Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - ApiKeyAuth: []
  /v1/extract/async:
    post:
      tags:
        - Extraction
      summary: Document Extraction (Async)
      description: >
        Run the DocX Agent asynchronously to extract structured information like tables and entities.
      operationId: extract_async
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_docXAgentExtractAsync_v1_extract_async_post'
      responses:
        '200':
          description: Extraction started successfully
          content:
            application/json:
              schema: {}
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - ApiKeyAuth: []

  /v1/extract:
    post:
      tags:
        - Extraction
      summary: Document Extraction (Sync)
      description: >
        Run the DocX Agent synchronously to extract structured data or text from uploaded files.
      operationId: extract_sync
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_docXAgentExtract_v1_extract_post'
      responses:
        '200':
          description: Extraction result
          content:
            application/json:
              schema: {}
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - ApiKeyAuth: []

  /v1/llm/qna/async:
    post:
      tags:
        - LLM QnA
      summary: LLM QnA (Async)
      description: >
        Asynchronously performs QnA task over documents using a large language model (LLM).
      operationId: llm_qna_async
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_llm_qna_with_celery_v1_llm_qna_async_post'
      responses:
        '200':
          description: Async QnA task enqueued
          content:
            application/json:
              schema: {}
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: "Enter your API key"

  schemas:
    Body_azure_invoices_api_v1_classify_post:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: A single invoice file (PNG, JPG, JPEG, or PDF) to classify pages.

    Body_docXAgentExtractAsync_v1_extract_async_post:
      type: object
      required:
        - files
        - query
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
          description: List of files to be processed.
        query:
          type: string
          description: Extraction query string.
        tags:
          type: string
          default: '[]'
          description: Optional tags for request filtering.

    Body_docXAgentExtract_v1_extract_post:
      type: object
      required:
        - files
        - query
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
          description: Files to process (array).
        query:
          type: string
          description: Extraction query string (what to extract).
        tags:
          type: string
          default: '[]'
          description: Optional tags.

    Body_llm_conversation_with_celery_v1_llm_qna_conversations_async_post:
      type: object
      required:
        - files
        - prompt
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
          description: Files for LLM document context.
        prompt:
          type: string
          description: User-supplied question prompt.
        service_type:
          type: string
          default: vision_quest;minicmp2_6
          description: Internal service identifier.
        enable_focus_area:
          type: string
          default: 'True'
        tags:
          type: string
          default: '[]'
          description: Optional metadata tags.
        is_multi_invoice:
          type: string
          default: 'False'
        max_token:
          type: string
          default: '8096'
        temperature:
          type: string
          default: '0'
        is_raw_text_required:
          type: string
          default: 'False'

    Body_llm_qna_with_celery_v1_llm_qna_async_post:
      type: object
      required:
        - files
        - query
      properties:
        files:
          type: array
          items:
            type: string
            format: binary
          description: Input files.
        query:
          type: string
          description: Query string in plain text or JSON.
        tags:
          type: string
          default: '[]'
        service_type:
          type: string
          default: vision_quest;minicmp2_6
        enable_validation:
          type: string
          default: 'True'
        max_token:
          type: string
          default: '8096'
        temperature:
          type: string
          default: '0'
        example_files:
          type: array
          default: []
          items:
            type: string
            format: binary

    HTTPValidationError:
      type: object
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'

    ValidationError:
      type: object
      required:
        - loc
        - msg
        - type
      properties:
        loc:
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          type: string
        type:
          type: string
